%!PS-Adobe-2.0 EPSF-2.0
%%Title: test.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Tue May 21 15:53:26 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (test.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (scoombs)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May 21 15:53:26 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
714 280 M
63 0 V
6170 0 R
-63 0 V
stroke
630 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.125)]
] -46.7 MRshow
1.000 UL
LTb
714 697 M
63 0 V
6170 0 R
-63 0 V
stroke
630 697 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.13)]
] -46.7 MRshow
1.000 UL
LTb
714 1115 M
63 0 V
6170 0 R
-63 0 V
stroke
630 1115 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.135)]
] -46.7 MRshow
1.000 UL
LTb
714 1532 M
63 0 V
6170 0 R
-63 0 V
stroke
630 1532 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.14)]
] -46.7 MRshow
1.000 UL
LTb
714 1949 M
63 0 V
6170 0 R
-63 0 V
stroke
630 1949 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.145)]
] -46.7 MRshow
1.000 UL
LTb
714 2367 M
63 0 V
6170 0 R
-63 0 V
stroke
630 2367 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.15)]
] -46.7 MRshow
1.000 UL
LTb
714 2784 M
63 0 V
6170 0 R
-63 0 V
stroke
630 2784 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.155)]
] -46.7 MRshow
1.000 UL
LTb
714 3202 M
63 0 V
6170 0 R
-63 0 V
stroke
630 3202 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.16)]
] -46.7 MRshow
1.000 UL
LTb
714 3619 M
63 0 V
6170 0 R
-63 0 V
stroke
630 3619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.165)]
] -46.7 MRshow
1.000 UL
LTb
714 4036 M
63 0 V
6170 0 R
-63 0 V
stroke
630 4036 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.17)]
] -46.7 MRshow
1.000 UL
LTb
714 4454 M
63 0 V
6170 0 R
-63 0 V
stroke
630 4454 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.175)]
] -46.7 MRshow
1.000 UL
LTb
714 4871 M
63 0 V
6170 0 R
-63 0 V
stroke
630 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.18)]
] -46.7 MRshow
1.000 UL
LTb
714 280 M
0 63 V
0 4528 R
0 -63 V
stroke
714 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1337 280 M
0 63 V
0 4528 R
0 -63 V
stroke
1337 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
1961 280 M
0 63 V
0 4528 R
0 -63 V
stroke
1961 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
1.000 UL
LTb
2584 280 M
0 63 V
0 4528 R
0 -63 V
stroke
2584 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
1.000 UL
LTb
3207 280 M
0 63 V
0 4528 R
0 -63 V
stroke
3207 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MCshow
1.000 UL
LTb
3831 280 M
0 63 V
0 4528 R
0 -63 V
stroke
3831 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
4454 280 M
0 63 V
0 4528 R
0 -63 V
stroke
4454 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 120)]
] -46.7 MCshow
1.000 UL
LTb
5077 280 M
0 63 V
0 4528 R
0 -63 V
stroke
5077 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 140)]
] -46.7 MCshow
1.000 UL
LTb
5700 280 M
0 63 V
0 4528 R
0 -63 V
stroke
5700 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 160)]
] -46.7 MCshow
1.000 UL
LTb
6324 280 M
0 63 V
0 4528 R
0 -63 V
stroke
6324 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 180)]
] -46.7 MCshow
1.000 UL
LTb
6947 280 M
0 63 V
0 4528 R
0 -63 V
stroke
6947 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
714 4871 N
714 280 L
6233 0 V
0 4591 V
-6233 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
LCb setrgbcolor
6296 4738 M
("./distance.txt" u 1) Rshow
LT0
714 4454 Pls
745 4435 Pls
776 4414 Pls
807 4391 Pls
839 4365 Pls
870 4337 Pls
901 4306 Pls
932 4273 Pls
963 4237 Pls
994 4199 Pls
1026 4159 Pls
1057 4116 Pls
1088 4071 Pls
1119 4024 Pls
1150 3974 Pls
1181 3922 Pls
1213 3868 Pls
1244 3812 Pls
1275 3754 Pls
1306 3694 Pls
1337 3632 Pls
1368 3568 Pls
1400 3502 Pls
1431 3435 Pls
1462 3366 Pls
1493 3295 Pls
1524 3223 Pls
1555 3149 Pls
1587 3075 Pls
1618 2999 Pls
1649 2922 Pls
1680 2845 Pls
1711 2767 Pls
1742 2688 Pls
1774 2609 Pls
1805 2530 Pls
1836 2452 Pls
1867 2373 Pls
1898 2295 Pls
1929 2217 Pls
1961 2140 Pls
1992 2065 Pls
2023 1990 Pls
2054 1917 Pls
2085 1846 Pls
2116 1777 Pls
2148 1709 Pls
2179 1644 Pls
2210 1581 Pls
2241 1521 Pls
2272 1463 Pls
2303 1408 Pls
2335 1355 Pls
2366 1305 Pls
2397 1258 Pls
2428 1214 Pls
2459 1172 Pls
2490 1132 Pls
2522 1095 Pls
2553 1061 Pls
2584 1028 Pls
2615 998 Pls
2646 970 Pls
2677 943 Pls
2709 919 Pls
2740 896 Pls
2771 876 Pls
2802 857 Pls
2833 840 Pls
2864 825 Pls
2896 813 Pls
2927 803 Pls
2958 796 Pls
2989 793 Pls
3020 792 Pls
3051 796 Pls
3083 804 Pls
3114 815 Pls
3145 832 Pls
3176 853 Pls
3207 879 Pls
3238 910 Pls
3270 946 Pls
3301 988 Pls
3332 1034 Pls
3363 1085 Pls
3394 1141 Pls
3425 1202 Pls
3457 1266 Pls
3488 1335 Pls
3519 1407 Pls
3550 1483 Pls
3581 1562 Pls
3612 1644 Pls
3644 1727 Pls
3675 1813 Pls
3706 1900 Pls
3737 1989 Pls
3768 2079 Pls
3799 2169 Pls
3831 2259 Pls
3862 2349 Pls
3893 2440 Pls
3924 2529 Pls
3955 2618 Pls
3986 2706 Pls
4017 2792 Pls
4049 2878 Pls
4080 2961 Pls
4111 3043 Pls
4142 3124 Pls
4173 3202 Pls
4204 3278 Pls
4236 3352 Pls
4267 3424 Pls
4298 3493 Pls
4329 3560 Pls
4360 3624 Pls
4391 3686 Pls
4423 3745 Pls
4454 3802 Pls
4485 3856 Pls
4516 3907 Pls
4547 3956 Pls
4578 4002 Pls
4610 4045 Pls
4641 4085 Pls
4672 4123 Pls
4703 4158 Pls
4734 4190 Pls
4765 4219 Pls
4797 4246 Pls
4828 4269 Pls
4859 4290 Pls
4890 4308 Pls
4921 4324 Pls
4952 4336 Pls
4984 4346 Pls
5015 4353 Pls
5046 4357 Pls
5077 4359 Pls
5108 4357 Pls
5139 4353 Pls
5171 4346 Pls
5202 4337 Pls
5233 4325 Pls
5264 4310 Pls
5295 4292 Pls
5326 4272 Pls
5358 4249 Pls
5389 4223 Pls
5420 4195 Pls
5451 4163 Pls
5482 4130 Pls
5513 4093 Pls
5545 4054 Pls
5576 4013 Pls
5607 3968 Pls
5638 3922 Pls
5669 3872 Pls
5700 3820 Pls
5732 3766 Pls
5763 3709 Pls
5794 3650 Pls
5825 3588 Pls
5856 3524 Pls
5887 3457 Pls
5919 3388 Pls
5950 3318 Pls
5981 3245 Pls
6012 3170 Pls
6043 3093 Pls
6074 3014 Pls
6106 2933 Pls
6137 2851 Pls
6168 2768 Pls
6199 2683 Pls
6230 2597 Pls
6261 2510 Pls
6293 2423 Pls
6324 2335 Pls
6355 2247 Pls
6386 2159 Pls
6417 2071 Pls
6448 1984 Pls
6480 1898 Pls
6511 1814 Pls
6542 1731 Pls
6573 1650 Pls
6604 1571 Pls
6635 1496 Pls
6667 1424 Pls
6698 1355 Pls
6729 1290 Pls
6760 1230 Pls
6791 1174 Pls
6822 1123 Pls
6854 1078 Pls
6885 1038 Pls
6579 4738 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
LCb setrgbcolor
6296 4598 M
("./distance.txt" u 2) Rshow
LT1
714 4454 Crs
745 4458 Crs
776 4460 Crs
807 4459 Crs
839 4456 Crs
870 4450 Crs
901 4441 Crs
932 4430 Crs
963 4417 Crs
994 4401 Crs
1026 4383 Crs
1057 4362 Crs
1088 4338 Crs
1119 4312 Crs
1150 4283 Crs
1181 4252 Crs
1213 4219 Crs
1244 4182 Crs
1275 4143 Crs
1306 4102 Crs
1337 4058 Crs
1368 4012 Crs
1400 3962 Crs
1431 3911 Crs
1462 3857 Crs
1493 3800 Crs
1524 3740 Crs
1555 3679 Crs
1587 3614 Crs
1618 3547 Crs
1649 3477 Crs
1680 3405 Crs
1711 3331 Crs
1742 3254 Crs
1774 3174 Crs
1805 3092 Crs
1836 3008 Crs
1867 2921 Crs
1898 2833 Crs
1929 2742 Crs
1961 2648 Crs
1992 2553 Crs
2023 2457 Crs
2054 2358 Crs
2085 2258 Crs
2116 2157 Crs
2148 2055 Crs
2179 1952 Crs
2210 1849 Crs
2241 1746 Crs
2272 1643 Crs
2303 1541 Crs
2335 1440 Crs
2366 1341 Crs
2397 1244 Crs
2428 1151 Crs
2459 1060 Crs
2490 975 Crs
2522 893 Crs
2553 818 Crs
2584 748 Crs
2615 686 Crs
2646 630 Crs
2677 583 Crs
2709 543 Crs
2740 512 Crs
2771 490 Crs
2802 477 Crs
2833 473 Crs
2864 478 Crs
2896 492 Crs
2927 515 Crs
2958 545 Crs
2989 584 Crs
3020 629 Crs
3051 681 Crs
3083 739 Crs
3114 802 Crs
3145 870 Crs
3176 942 Crs
3207 1018 Crs
3238 1096 Crs
3270 1176 Crs
3301 1258 Crs
3332 1341 Crs
3363 1425 Crs
3394 1509 Crs
3425 1592 Crs
3457 1676 Crs
3488 1759 Crs
3519 1841 Crs
3550 1922 Crs
3581 2002 Crs
3612 2080 Crs
3644 2157 Crs
3675 2233 Crs
3706 2307 Crs
3737 2379 Crs
3768 2450 Crs
3799 2518 Crs
3831 2585 Crs
3862 2650 Crs
3893 2714 Crs
3924 2775 Crs
3955 2835 Crs
3986 2893 Crs
4017 2949 Crs
4049 3002 Crs
4080 3055 Crs
4111 3105 Crs
4142 3153 Crs
4173 3199 Crs
4204 3243 Crs
4236 3286 Crs
4267 3326 Crs
4298 3365 Crs
4329 3401 Crs
4360 3435 Crs
4391 3468 Crs
4423 3498 Crs
4454 3527 Crs
4485 3553 Crs
4516 3578 Crs
4547 3600 Crs
4578 3620 Crs
4610 3639 Crs
4641 3655 Crs
4672 3669 Crs
4703 3682 Crs
4734 3692 Crs
4765 3700 Crs
4797 3707 Crs
4828 3711 Crs
4859 3714 Crs
4890 3714 Crs
4921 3713 Crs
4952 3709 Crs
4984 3704 Crs
5015 3697 Crs
5046 3688 Crs
5077 3677 Crs
5108 3664 Crs
5139 3650 Crs
5171 3633 Crs
5202 3615 Crs
5233 3596 Crs
5264 3574 Crs
5295 3551 Crs
5326 3527 Crs
5358 3500 Crs
5389 3473 Crs
5420 3444 Crs
5451 3413 Crs
5482 3381 Crs
5513 3348 Crs
5545 3314 Crs
5576 3278 Crs
5607 3241 Crs
5638 3203 Crs
5669 3164 Crs
5700 3124 Crs
5732 3084 Crs
5763 3042 Crs
5794 3000 Crs
5825 2957 Crs
5856 2913 Crs
5887 2869 Crs
5919 2824 Crs
5950 2779 Crs
5981 2734 Crs
6012 2689 Crs
6043 2643 Crs
6074 2597 Crs
6106 2551 Crs
6137 2505 Crs
6168 2459 Crs
6199 2413 Crs
6230 2367 Crs
6261 2322 Crs
6293 2277 Crs
6324 2232 Crs
6355 2187 Crs
6386 2142 Crs
6417 2098 Crs
6448 2054 Crs
6480 2010 Crs
6511 1966 Crs
6542 1923 Crs
6573 1879 Crs
6604 1836 Crs
6635 1793 Crs
6667 1750 Crs
6698 1707 Crs
6729 1664 Crs
6760 1621 Crs
6791 1579 Crs
6822 1536 Crs
6854 1493 Crs
6885 1451 Crs
6579 4598 Crs
% End plot #2
1.000 UL
LTb
714 4871 N
714 280 L
6233 0 V
0 4591 V
-6233 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
